var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.455,1,0.817]],["body/components/AppComponent.html",[0,0.583,1,0.951,2,0.849,3,0.224,4,0.122,5,0.68,6,0.68,7,1.395,8,0.68,9,0.188,10,1.08,11,0.627,12,2.176,13,3.165,14,0.68,15,1.996,16,1.534,17,1.27,18,1.105,19,2.749,20,1.105,21,2.176,22,0.224,23,0.654,24,4.353,25,2.295,26,0.746,27,1.882,28,3.731,29,3.165,30,3.165,31,2.176,32,0.746,33,1.339,34,3.165,35,1.821,36,2.08,37,1.347,38,2.176,39,2.176,40,1.235,41,0.052,42,0.951,43,0.622,44,0.654,45,3.482,46,2.176,47,2.883,48,2.176,49,1.105,50,1.279,51,1.27,52,2.176,53,2.08,54,3.416,55,1.894,56,2.149,57,2.176,58,2.178,59,3.482,60,1.339,61,2.176,62,1.193,63,1.193,64,1.339,65,2.176,66,1.27,67,2.176,68,2.176,69,2.176,70,1.358,71,1.339,72,2.176,73,3.165,74,3.731,75,1.755,76,1.755,77,2.669,78,2.176,79,3.932,80,1.339,81,2.553,82,2.176,83,1.235,84,1.755,85,2.176,86,2.176,87,2.176,88,2.749,89,1.339,90,2.176,91,0.522,92,1.755,93,1.339,94,0.685,95,1.08,96,1.339,97,0.305,98,1.08,99,1.339,100,1.08,101,0.224,102,0.352,103,1.235,104,1.221,105,1.339,106,1.339,107,1.339,108,2.176,109,1.339,110,1.339,111,1.339,112,1.339,113,1.339,114,0.909,115,1.08,116,1.08,117,1.768,118,1.339,119,0.595,120,1.339,121,1.27,122,2.176,123,1.339,124,1.339,125,1.339,126,1.339,127,2.176,128,2.176,129,1.755,130,2.176,131,1.339,132,2.364,133,1.339,134,2.391,135,2.176,136,3.165,137,1.866,138,2.533,139,1.339,140,2.295,141,1.604,142,1.477,143,1.866,144,2.15,145,1.477,146,1.27,147,2.176,148,0.909,149,1.755,150,1.08,151,1.477,152,2.391,153,1.604,154,1.339,155,3.171,156,2.782,157,1.477,158,1.755,159,1.477,160,0.909,161,0.909,162,1.339,163,1.339,164,2.176,165,3.932,166,1.866,167,2.553,168,1.339,169,2.149,170,1.27,171,1.08,172,2.176,173,1.866,174,1.08,175,0.909,176,2.176,177,0.781,178,1.339,179,1.339,180,1.339,181,1.339,182,1.339,183,1.08,184,1.339,185,1.339,186,1.477,187,1.08,188,1.105,189,1.08,190,1.105,191,1.755,192,1.339,193,1.339,194,1.08,195,2.533,196,1.339,197,1.339,198,2.217,199,1.848,200,1.339,201,2.364,202,2.533,203,2.176,204,1.339,205,1.477,206,1.339,207,1.08,208,1.339,209,1.08,210,1.339,211,1.339,212,1.339,213,1.755,214,0.909,215,0.909,216,0.909,217,1.339,218,1.339,219,1.339,220,0.909,221,0.68,222,1.105,223,1.105,224,0.68,225,0.68,226,0.68,227,0.402,228,0.68,229,0.402,230,0.68,231,0.402,232,0.68,233,0.402,234,0.522,235,0.68,236,0.68,237,0.02,238,0.02]],["title/modules/AppModule.html",[239,2.191,240,1.586]],["body/modules/AppModule.html",[1,1.605,3,0.476,4,0.26,9,0.399,16,1.108,41,0.052,94,1.067,97,0.648,98,2.291,101,0.476,102,0.746,227,1.486,229,1.486,231,1.486,233,1.486,237,0.035,238,0.035,240,3.193,241,1.442,242,2.227,243,2.291,244,2.291,245,2.291,246,2.291,247,2.511,248,3.076,249,2.291,250,1.928,251,2.84,252,3.815,253,3.076,254,3.815,255,3.076,256,3.815,257,3.076,258,1.928,259,2.84,260,2.84,261,3.815,262,2.84,263,3.815,264,2.84,265,3.815,266,3.815,267,2.84,268,3.815,269,2.84,270,3.815,271,2.84,272,2.84,273,2.84,274,3.815,275,2.291,276,2.84,277,2.84,278,2.84]],["title/modules/AppRoutingModule.html",[239,2.191,247,1.379]],["body/modules/AppRoutingModule.html",[3,0.665,4,0.363,9,0.557,41,0.051,94,0.927,97,0.906,101,0.665,102,1.043,121,2.318,237,0.043,238,0.043,241,2.016,247,2.395,253,3.203,255,3.804,279,3.972,280,3.972,281,4.717,282,3.416,283,3.203,284,3.972,285,3.972]],["title/interfaces/Article.html",[286,1.06,287,0.931]],["body/interfaces/Article.html",[3,0.49,4,0.49,9,0.411,11,1.194,22,0.49,23,1.17,25,2.912,41,0.052,43,1.001,44,1.17,51,2.272,55,2.625,62,1.887,94,0.575,101,0.49,144,2.366,237,0.036,238,0.036,286,1.706,287,1.897,288,1.709,289,2.361,290,3.892,291,3.139,292,4.023,293,4.66,294,4.66,295,3.139,296,3.139,297,3.892,298,1.709]],["title/components/CardComponent.html",[0,0.455,227,0.817]],["body/components/CardComponent.html",[0,0.615,1,0.447,2,0.923,3,0.249,4,0.269,5,0.754,6,0.754,7,0.754,8,0.754,9,0.208,11,0.936,14,0.754,15,2.082,16,1.6,18,1.201,20,1.201,22,0.249,25,2.283,26,0.811,32,0.509,37,1.406,40,0.58,41,0.052,42,0.886,43,0.465,44,0.447,47,2.625,49,2.469,53,1.707,55,1.985,58,1.381,62,1.01,63,0.509,66,1.381,70,1.15,75,1.908,77,1.606,83,0.58,91,0.58,94,0.465,97,0.339,101,0.249,102,0.39,103,0.58,117,1.707,119,1.631,132,1.009,134,2.143,138,1.606,140,2.283,141,1.721,142,1.009,143,2.282,144,1.707,145,1.606,146,1.381,148,1.009,152,0.867,155,2.377,156,3.419,157,2.492,159,2.979,160,1.009,161,1.009,166,2.001,167,1.198,169,1.009,173,1.009,174,1.908,175,2.001,177,1.381,188,0.754,190,1.201,195,3.118,198,2.711,199,2.143,201,1.606,202,2.282,205,1.606,207,2.377,209,1.908,214,1.009,215,1.009,216,2.655,220,1.606,221,0.754,222,1.201,223,1.201,224,0.754,225,0.754,226,0.754,227,1.01,228,0.754,229,0.447,230,0.754,231,0.447,232,0.754,233,0.447,234,0.58,235,0.754,236,0.754,237,0.022,238,0.022,287,1.803,292,2.96,295,1.908,296,3.308,298,1.962,299,1.198,300,1.201,301,1.721,302,2.948,303,2.366,304,2.366,305,2.366,306,2.366,307,3.671,308,3.671,309,3.671,310,3.671,311,3.671,312,1.485,313,2.366,314,1.485,315,2.366,316,2.366,317,1.485,318,1.485,319,2.283,320,1.485,321,1.485,322,1.485,323,1.485,324,1.485,325,1.485,326,1.485,327,1.485,328,1.009,329,1.606,330,0.867,331,1.485,332,3.671,333,2.366,334,2.366,335,2.366,336,2.366,337,2.366,338,2.366,339,2.366,340,0.58,341,1.485,342,2.366,343,1.485,344,1.485,345,2.366,346,2.366,347,1.485,348,1.485,349,1.198,350,1.485,351,1.485,352,1.485,353,1.485,354,1.485,355,1.485,356,1.485,357,3.362,358,1.485,359,1.606,360,1.485,361,1.908,362,1.198,363,1.485,364,1.485,365,2.948,366,2.366,367,1.485,368,1.485,369,1.485,370,1.485,371,1.485,372,1.485,373,1.198,374,1.485,375,2.366,376,2.282,377,2.948,378,1.009]],["title/injectables/CardService.html",[35,1.207,379,1.06]],["body/injectables/CardService.html",[3,0.417,4,0.228,9,0.35,11,0.918,17,1.454,22,0.417,23,1.048,26,1.195,27,2.248,32,0.854,35,1.549,37,1.571,40,1.36,41,0.052,42,1.048,43,0.901,44,1.048,50,1.195,55,2.707,62,1.672,63,1.571,70,1.36,83,0.972,91,0.972,94,0.856,97,0.568,101,0.417,102,1.204,103,1.36,104,1.787,114,2.367,115,2.811,119,1.549,237,0.032,238,0.032,275,2.008,291,2.811,298,1.454,319,1.77,340,1.7,379,1.36,380,1.454,381,2.008,382,2.367,383,2.367,384,2.653,385,3.486,386,3.513,387,4.356,388,2.491,389,4.752,390,2.491,391,1.77,392,3.486,393,4.752,394,4.585,395,3.486,396,3.486,397,3.486,398,2.491,399,3.486,400,3.486,401,3.486,402,4.021,403,2.491,404,2.676,405,2.035,406,2.042,407,2.491,408,2.491,409,1.264,410,2.008,411,1.691,412,1.454,413,3.486,414,2.491,415,3.486,416,2.491]],["title/components/CategoriesComponent.html",[0,0.455,229,0.817]],["body/components/CategoriesComponent.html",[0,0.717,1,0.628,2,1.198,3,0.35,4,0.191,5,1.06,6,1.06,7,1.06,8,1.06,9,0.293,11,0.831,14,1.06,15,2.35,16,1.806,18,1.559,20,1.559,22,0.35,26,1.053,27,1.619,32,0.716,35,2.057,37,1.053,40,1.198,41,0.052,42,1.208,43,0.604,44,0.923,47,2.345,49,1.559,50,1.377,53,1.85,54,4.03,55,1.85,62,1.249,63,0.716,66,1.793,70,1.422,77,2.086,94,0.604,95,1.684,97,0.477,101,0.35,102,0.549,103,1.198,114,1.418,116,1.684,117,2.174,129,2.477,134,1.793,140,2.499,141,1.793,142,1.418,143,1.418,144,1.06,145,1.418,146,2.127,148,1.418,149,2.477,150,2.477,151,1.418,152,2.345,153,1.219,156,2.907,157,1.418,158,1.684,159,1.418,160,2.086,161,2.086,170,2.127,177,1.219,188,1.06,190,1.06,195,2.728,201,2.474,202,2.086,205,1.418,216,1.418,220,1.418,221,1.06,222,1.559,223,1.559,224,1.06,225,1.06,226,1.06,227,0.628,228,1.06,229,1.208,230,1.06,231,0.628,232,1.06,233,0.628,234,0.815,235,1.06,236,1.06,237,0.028,238,0.028,300,1.559,301,2.127,319,1.559,329,1.418,330,1.219,340,1.198,361,2.477,378,2.086,382,2.728,383,2.086,384,1.559,391,1.559,412,1.219,417,1.684,418,3.072,419,4.282,420,3.072,421,3.644,422,3.072,423,3.072,424,1.684,425,2.088,426,3.072,427,1.793,428,3.072,429,2.088,430,3.072,431,3.072,432,2.477,433,3.072,434,3.072,435,2.088,436,2.088,437,2.088,438,3.072,439,3.072,440,3.072,441,3.072,442,3.072,443,3.072,444,3.072,445,2.088,446,3.072,447,2.088,448,2.088,449,2.088,450,4.282,451,2.088,452,2.088,453,2.088,454,3.072,455,2.088,456,2.088,457,2.088,458,2.088,459,2.088,460,2.088]],["title/components/FeedComponent.html",[0,0.455,231,0.817]],["body/components/FeedComponent.html",[0,0.721,1,0.637,2,1.211,3,0.355,4,0.194,5,1.076,6,1.076,7,1.076,8,1.076,9,0.297,11,0.709,14,1.076,15,2.361,16,1.814,18,1.576,20,1.576,22,0.355,23,0.933,26,1.064,27,2,32,1.064,35,2.066,36,2.421,37,1.387,40,0.827,41,0.052,42,1.105,43,0.722,44,0.637,49,1.576,50,1.634,53,1.076,56,2.747,58,1.812,63,0.726,70,1.211,83,1.579,91,1.211,94,0.914,97,0.484,100,1.709,101,0.355,102,0.557,103,1.211,104,1.38,117,2.054,119,1.633,140,1.812,141,1.237,152,2.362,153,1.237,170,1.237,177,1.237,186,2.108,188,1.076,190,1.076,221,1.076,222,1.576,223,1.576,224,1.076,225,1.076,226,1.076,227,0.637,228,1.076,229,0.637,230,1.076,231,1.216,232,1.076,233,0.637,234,0.827,235,1.076,236,1.076,237,0.028,238,0.028,287,1.259,300,1.576,301,2.145,328,1.439,330,2.362,359,2.495,382,2.108,383,2.108,384,2.421,386,2.504,391,1.576,404,2.514,405,2.627,406,2.054,409,1.076,410,1.709,424,1.709,427,2.926,461,1.709,462,3.105,463,3.105,464,3.056,465,3.675,466,3.105,467,3.675,468,2.119,469,2.504,470,2.504,471,2.119,472,2.504,473,3.263,474,1.812,475,3.105,476,3.105,477,3.675,478,3.675,479,2.119,480,3.105,481,3.675,482,2.119,483,2.504,484,2.504,485,2.119,486,1.709,487,2.119,488,2.119,489,3.105]],["title/interfaces/NewsResponse.html",[286,1.06,406,1.379]],["body/interfaces/NewsResponse.html",[0,0.709,3,0.558,4,0.305,9,0.468,11,0.761,22,0.558,23,1.273,41,0.051,43,0.915,49,2.151,50,1.452,51,2.473,62,1.596,94,0.656,101,0.558,237,0.045,238,0.039,286,1.817,287,1.733,288,1.947,359,2.876,384,2.624,405,3.017,406,2.151,427,3.017,464,3.326,474,2.473,490,2.69,491,4.237,492,5.168,493,4.899,494,5.057,495,4.237,496,4.237]],["title/injectables/SearchService.html",[36,1.379,379,1.06]],["body/injectables/SearchService.html",[3,0.356,4,0.194,9,0.298,11,0.925,17,1.241,22,0.356,23,0.935,25,2.717,26,1.066,27,2.002,32,0.728,36,1.58,37,1.389,40,1.436,41,0.052,42,1.106,43,0.724,44,1.106,50,1.544,56,3.36,58,2.63,62,1.262,63,1.544,81,3.268,83,1.436,84,3.268,91,0.829,94,0.797,97,0.485,101,0.356,102,0.558,103,1.581,104,1.636,119,1.916,121,2.149,175,2.113,234,1.862,237,0.028,238,0.037,287,1.262,328,1.443,340,1.214,379,1.214,380,1.241,384,2.287,391,1.58,404,2.842,405,2.63,409,1.079,411,1.443,412,1.241,427,3.076,432,2.509,464,3.059,469,3.268,470,3.268,473,3.633,483,3.268,484,3.268,486,1.714,497,1.714,498,3.681,499,3.112,500,1.714,501,2.363,502,2.125,503,3.112,504,2.751,505,2.113,506,3.112,507,4.506,508,2.125,509,3.112,510,3.112,511,4.506,512,3.112,513,4.052,514,3.112,515,2.125,516,3.112,517,2.125,518,3.112,519,2.125,520,1.714,521,2.125,522,3.112,523,2.125,524,3.681,525,4.052,526,2.125,527,2.125,528,2.125,529,2.125,530,2.125,531,2.125,532,2.125,533,2.125,534,2.125,535,2.125,536,2.125,537,2.125,538,2.125]],["title/interfaces/Source.html",[4,0.248,286,1.06]],["body/interfaces/Source.html",[3,0.635,4,0.498,9,0.532,11,0.866,22,0.635,23,1.379,41,0.051,42,1.603,43,0.746,44,1.379,51,2.214,62,1.691,101,0.635,237,0.042,238,0.042,286,1.925,287,1.573,288,2.214,298,2.214,539,3.059,540,5.126,541,3.701]],["title/components/SpinnerComponent.html",[0,0.455,233,0.817]],["body/components/SpinnerComponent.html",[0,0.718,1,0.503,2,1.013,3,0.28,4,0.153,5,0.849,6,0.849,7,0.849,8,0.849,9,0.235,11,0.726,14,0.849,15,2.178,16,1.674,18,1.318,20,1.318,22,0.28,23,0.781,26,0.89,32,0.573,37,1.23,40,1.013,41,0.052,42,1.079,43,0.626,44,0.781,47,1.858,50,1.23,53,2.088,63,0.89,70,1.4,76,2.094,94,0.51,97,0.382,101,0.28,102,0.439,103,1.013,104,1.827,117,1.822,121,0.976,132,1.763,134,1.516,137,2.436,138,2.161,144,0.849,146,1.516,151,1.135,153,1.858,166,1.135,169,1.135,170,1.516,171,1.349,173,1.135,183,2.894,187,2.567,188,1.616,189,1.349,190,1.318,194,1.349,199,2.81,213,1.349,214,1.135,215,1.135,221,0.849,222,1.822,223,1.822,224,0.849,225,0.849,226,0.849,227,0.503,228,0.849,229,0.503,230,0.849,231,0.503,232,0.849,233,1.29,234,2.12,235,0.849,236,0.849,237,0.024,238,0.024,300,1.318,301,1.858,319,1.318,330,2.095,349,3.934,376,2.161,378,1.135,391,1.318,412,0.976,472,2.094,474,1.516,500,1.349,501,2.178,504,1.763,505,1.763,542,1.349,543,2.597,544,3.183,545,2.597,546,2.597,547,2.597,548,2.597,549,4.878,550,1.672,551,2.597,552,3.589,553,2.597,554,3.183,555,1.672,556,2.597,557,2.597,558,1.763,559,2.094,560,1.763,561,2.094,562,2.597,563,1.672,564,1.672,565,1.672,566,1.672,567,1.672,568,2.597,569,1.672,570,1.672,571,5.069,572,1.672,573,1.672,574,1.672,575,2.597,576,1.672,577,1.672,578,2.597,579,4.878,580,1.672,581,1.672,582,1.672,583,1.672,584,2.597,585,1.672,586,1.672,587,1.672,588,1.672,589,4.814,590,1.672,591,1.672,592,4.814,593,1.672,594,1.672,595,1.672,596,1.672,597,1.672,598,1.672,599,1.672,600,1.672,601,1.672,602,1.672,603,1.672,604,1.672,605,1.672,606,1.672,607,1.672,608,1.672,609,1.672,610,1.672,611,1.672,612,1.672,613,1.672,614,1.672,615,1.672,616,1.672,617,1.672,618,1.672,619,1.672,620,1.672,621,1.672,622,1.672,623,1.672,624,1.672,625,1.672,626,1.672,627,1.672,628,2.597,629,1.672,630,1.672]],["title/injectables/SpinnerService.html",[379,1.06,501,1.379]],["body/injectables/SpinnerService.html",[2,1.778,3,0.464,4,0.253,9,0.389,11,0.632,17,1.616,22,0.464,23,1.127,26,1.285,27,2.3,32,0.949,37,1.562,41,0.052,50,1.285,63,1.562,70,1.778,83,1.858,91,1.08,94,0.836,97,0.632,101,0.464,102,0.727,104,1.889,119,1.231,137,2.546,234,2.075,237,0.034,238,0.034,319,1.904,329,1.88,340,1.463,379,1.463,380,1.616,404,2.93,409,1.406,411,1.88,474,2.865,501,1.904,504,2.546,505,2.546,520,2.233,558,2.546,559,3.675,560,2.546,561,3.675,631,2.233,632,4.252,633,4.557,634,2.769,635,4.557,636,2.769,637,4.557,638,4.557,639,4.557,640,4.557,641,2.769,642,3.75,643,3.75,644,2.769,645,2.769,646,2.233,647,2.769,648,2.769,649,2.769]],["title/coverage.html",[650,2.985]],["body/coverage.html",[0,0.849,1,1.012,4,0.308,9,0.472,10,2.715,35,1.496,36,1.709,41,0.051,43,0.662,227,1.012,229,1.012,231,1.012,233,1.012,237,0.039,238,0.039,286,1.824,287,1.154,289,2.715,299,2.715,340,1.313,376,3.76,379,1.824,381,2.715,406,1.709,417,2.715,461,2.715,490,2.715,497,2.715,501,1.709,539,2.715,541,2.715,542,2.715,631,2.715,650,2.715,651,3.366,652,3.366,653,3.366,654,4.676,655,3.366,656,4.915,657,2.715,658,3.964,659,3.437,660,4.915,661,2.715,662,3.366,663,3.366,664,3.437,665,2.715,666,2.715,667,3.366,668,3.366]],["title/dependencies.html",[242,1.906,669,1.832]],["body/dependencies.html",[41,0.051,97,0.884,237,0.042,238,0.042,242,2.262,257,3.748,258,3.156,283,3.125,409,1.967,646,3.125,670,3.875,671,5.53,672,3.875,673,3.875,674,3.875,675,3.875,676,3.875,677,3.875,678,3.875,679,3.875,680,3.875,681,3.875]],["title/index.html",[22,0.38,682,2.272,683,2.272]],["body/index.html",[0,0.78,4,0.305,16,1.304,41,0.039,42,1.005,66,1.951,92,2.696,237,0.039,238,0.039,250,2.27,300,1.697,340,1.304,373,4.17,669,2.696,684,4.243,685,3.343,686,4.661,687,4.661,688,3.343,689,3.343,690,3.343,691,4.243,692,5.06,693,5.253,694,3.343,695,3.343,696,3.343,697,3.343,698,3.343,699,3.343,700,3.343,701,3.343,702,3.343,703,3.343,704,4.661,705,4.661,706,3.343,707,4.903,708,3.343,709,3.343,710,3.343,711,3.343,712,4.243,713,4.243,714,3.954,715,3.343,716,4.243,717,4.243,718,3.343,719,3.343,720,3.343,721,3.343,722,4.243,723,3.343,724,3.343,725,3.343,726,3.343,727,3.343,728,3.343,729,4.661,730,3.343,731,3.343,732,3.343,733,2.27,734,3.343]],["title/modules.html",[241,1.879]],["body/modules.html",[41,0.045,237,0.045,238,0.045,240,2.483,241,2.16,247,2.16,258,2.888,735,4.254,736,4.254,737,4.91,738,4.254,739,4.254]],["title/overview.html",[733,2.513]],["body/overview.html",[1,1.611,2,1.431,41,0.05,186,2.49,191,2.958,199,2.141,227,1.461,229,1.461,231,1.461,233,1.461,237,0.041,238,0.041,240,3.262,241,1.862,242,2.624,243,2.958,244,2.958,245,2.958,246,2.958,247,2.468,248,3.625,249,2.958,250,2.49,288,2.141,380,2.141,733,2.49,740,4.495]],["title/routes.html",[282,2.513]],["body/routes.html",[41,0.046,237,0.046,238,0.046,282,2.968]],["title/miscellaneous/variables.html",[741,1.832,742,2.633]],["body/miscellaneous/variables.html",[22,0.605,41,0.05,43,1.018,83,1.884,91,1.884,237,0.041,238,0.041,362,3.591,558,2.452,560,3.024,657,2.913,658,3.894,659,4.352,661,2.913,664,2.913,665,3.591,666,3.591,714,3.591,741,2.913,742,2.913,743,4.454,744,3.612,745,3.612,746,3.612,747,3.612,748,3.612,749,3.612,750,3.612,751,5.396,752,4.454,753,4.454]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{},"overview.html":{}}}],["0.11.4",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":453,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["0.1s",{"_index":623,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.2",{"_index":489,"title":{},"body":{"components/FeedComponent.html":{}}}],["0.25",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":620,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.3",{"_index":353,"title":{},"body":{"components/CardComponent.html":{}}}],["0.3s",{"_index":617,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.4s",{"_index":614,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.5",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["0.5s",{"_index":611,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.6rem",{"_index":452,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["0.6s",{"_index":608,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.7s",{"_index":605,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.8s",{"_index":602,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.9375rem",{"_index":449,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["0.9s",{"_index":599,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0s",{"_index":626,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["1.1s",{"_index":593,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1.2s",{"_index":580,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1/1",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":376,"title":{},"body":{"components/CardComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["100px",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["11px",{"_index":458,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["12.5",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["12px",{"_index":377,"title":{},"body":{"components/CardComponent.html":{}}}],["13.0.0",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["13.0.1",{"_index":689,"title":{},"body":{"index.html":{}}}],["13px",{"_index":370,"title":{},"body":{"components/CardComponent.html":{}}}],["1450px)']).subscribe((res",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["14px",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["15px",{"_index":346,"title":{},"body":{"components/CardComponent.html":{}}}],["16px",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["18px",{"_index":378,"title":{},"body":{"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{}}}],["1d1d1d",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["1px",{"_index":345,"title":{},"body":{"components/CardComponent.html":{}}}],["1s",{"_index":596,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["2",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["200px",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["206",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["20px",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["25px",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["292929",{"_index":347,"title":{},"body":{"components/CardComponent.html":{}}}],["2em",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":740,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["300px",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["37px",{"_index":586,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["383838",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":585,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["4/4",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["40px",{"_index":578,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["410px",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["4b4b4b",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["4ch",{"_index":445,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["5",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"overview.html":{}}}],["5/5",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["500px",{"_index":375,"title":{},"body":{"components/CardComponent.html":{}}}],["520px",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["599px",{"_index":457,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["5cb85c",{"_index":455,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["5px",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["6/6",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":459,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["65px",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["6px",{"_index":587,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["7.4.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["70c8e2",{"_index":451,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["8/8",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":575,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["87.2",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["8d99ae",{"_index":374,"title":{},"body":{"components/CardComponent.html":{}}}],["8px",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["9/9",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["910px",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["93",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["990px",{"_index":460,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["a1236d",{"_index":367,"title":{},"body":{"components/CardComponent.html":{}}}],["absolute",{"_index":584,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["accessors",{"_index":306,"title":{},"body":{"components/CardComponent.html":{}}}],["actual_component",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["add",{"_index":725,"title":{},"body":{"index.html":{}}}],["align",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["angular",{"_index":686,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/common",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"injectables/CardService.html":{}}}],["angular/compiler",{"_index":646,"title":{},"body":{"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["angular/core",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":579,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["any).value",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["api",{"_index":384,"title":{},"body":{"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{}}}],["apikey=ca343f5fb14c4fe9946c2af070bdf527",{"_index":436,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["app.component",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":240,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":247,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["article",{"_index":287,"title":{"interfaces/Article.html":{}},"body":{"interfaces/Article.html":{},"components/CardComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"coverage.html":{}}}],["article.title.tolowercase",{"_index":537,"title":{},"body":{"injectables/SearchService.html":{}}}],["articleauthor",{"_index":309,"title":{},"body":{"components/CardComponent.html":{}}}],["articledescription",{"_index":308,"title":{},"body":{"components/CardComponent.html":{}}}],["articlepublishedat",{"_index":311,"title":{},"body":{"components/CardComponent.html":{}}}],["articles",{"_index":427,"title":{},"body":{"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{}}}],["articles.filter((article",{"_index":535,"title":{},"body":{"injectables/SearchService.html":{}}}],["articlesource",{"_index":310,"title":{},"body":{"components/CardComponent.html":{}}}],["articletitle",{"_index":307,"title":{},"body":{"components/CardComponent.html":{}}}],["artifacts",{"_index":708,"title":{},"body":{"index.html":{}}}],["author",{"_index":292,"title":{},"body":{"interfaces/Article.html":{},"components/CardComponent.html":{}}}],["auto",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["automatically",{"_index":698,"title":{},"body":{"index.html":{}}}],["available",{"_index":739,"title":{},"body":{"modules.html":{}}}],["background",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["bar",{"_index":484,"title":{},"body":{"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["based",{"_index":557,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["behaviorsubject",{"_index":520,"title":{},"body":{"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}}}],["behaviorsubject(false",{"_index":643,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["behaviorsubject(undefined",{"_index":516,"title":{},"body":{"injectables/SearchService.html":{}}}],["between",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{}}}],["block",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["boolean",{"_index":554,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["bootstrap",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["bottom",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["box",{"_index":351,"title":{},"body":{"components/CardComponent.html":{}}}],["breakpointobserver",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":737,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":707,"title":{},"body":{"index.html":{}}}],["business",{"_index":439,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["button",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["calc(100vh",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["called",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["calls",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["capabilities",{"_index":727,"title":{},"body":{"index.html":{}}}],["card",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{}}}],["card'},{'name",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["card.component.css",{"_index":302,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.html",{"_index":303,"title":{},"body":{"components/CardComponent.html":{}}}],["card.service",{"_index":485,"title":{},"body":{"components/FeedComponent.html":{}}}],["card/card.component",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["card:hover",{"_index":348,"title":{},"body":{"components/CardComponent.html":{}}}],["cardcomponent",{"_index":227,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardservice",{"_index":35,"title":{"injectables/CardService.html":{}},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"coverage.html":{}}}],["case",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["categories",{"_index":419,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories'},{'name",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["categories.component.css",{"_index":421,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.html",{"_index":422,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories/categories.component",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescomponent",{"_index":229,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categorize",{"_index":290,"title":{},"body":{"interfaces/Article.html":{}}}],["category",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["category[1",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{}}}],["change",{"_index":700,"title":{},"body":{"index.html":{}}}],["changeurl",{"_index":385,"title":{},"body":{"injectables/CardService.html":{}}}],["changeurl(newurl",{"_index":397,"title":{},"body":{"injectables/CardService.html":{}}}],["changing",{"_index":431,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["check",{"_index":732,"title":{},"body":{"index.html":{}}}],["checking",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["child(1",{"_index":590,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(10",{"_index":618,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(11",{"_index":621,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(12",{"_index":624,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(2",{"_index":594,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(3",{"_index":597,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(4",{"_index":600,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(5",{"_index":603,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(6",{"_index":606,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(7",{"_index":609,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(8",{"_index":612,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(9",{"_index":615,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["choice",{"_index":721,"title":{},"body":{"index.html":{}}}],["class",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["cli",{"_index":687,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["close",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":702,"title":{},"body":{"index.html":{}}}],["collectionobs",{"_index":513,"title":{},"body":{"injectables/SearchService.html":{}}}],["collectionobs.pipe",{"_index":533,"title":{},"body":{"injectables/SearchService.html":{}}}],["color",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{}}}],["column",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["command",{"_index":722,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"overview.html":{}}}],["console.log(state",{"_index":569,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["console.log(value",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["constructor(cardservice",{"_index":424,"title":{},"body":{"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["constructor(http",{"_index":388,"title":{},"body":{"injectables/CardService.html":{}}}],["constructor(observer",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":412,"title":{},"body":{"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{}}}],["constructor(spinnerservice",{"_index":500,"title":{},"body":{"injectables/SearchService.html":{},"components/SpinnerComponent.html":{}}}],["container",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{}}}],["context",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":364,"title":{},"body":{"components/CardComponent.html":{}}}],["coverage",{"_index":650,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cursor",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["daily",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["dashboard",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":474,"title":{},"body":{"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["date",{"_index":296,"title":{},"body":{"interfaces/Article.html":{},"components/CardComponent.html":{}}}],["debouncetime",{"_index":521,"title":{},"body":{"injectables/SearchService.html":{}}}],["debouncetime(400",{"_index":527,"title":{},"body":{"injectables/SearchService.html":{}}}],["decides",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["declaration",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["declarations",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration",{"_index":355,"title":{},"body":{"components/CardComponent.html":{}}}],["decorators",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["delay",{"_index":592,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dependencies",{"_index":242,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["desired",{"_index":432,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/SearchService.html":{}}}],["dev",{"_index":695,"title":{},"body":{"index.html":{}}}],["development",{"_index":690,"title":{},"body":{"index.html":{}}}],["direction",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["directive",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["directives",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":706,"title":{},"body":{"index.html":{}}}],["directory",{"_index":711,"title":{},"body":{"index.html":{}}}],["display",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["displayed",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["displaying",{"_index":503,"title":{},"body":{"injectables/SearchService.html":{}}}],["displays",{"_index":462,"title":{},"body":{"components/FeedComponent.html":{}}}],["displaystatus",{"_index":568,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dist",{"_index":710,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":522,"title":{},"body":{"injectables/SearchService.html":{}}}],["div",{"_index":576,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div:after",{"_index":583,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div:nth",{"_index":589,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["document.getelementbyid('spinner",{"_index":565,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["documentation",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["dosearch",{"_index":499,"title":{},"body":{"injectables/SearchService.html":{}}}],["dosearch(collectionobs",{"_index":506,"title":{},"body":{"injectables/SearchService.html":{}}}],["dynamic",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":719,"title":{},"body":{"index.html":{}}}],["each",{"_index":463,"title":{},"body":{"components/FeedComponent.html":{}}}],["edf2f4",{"_index":371,"title":{},"body":{"components/CardComponent.html":{}}}],["element",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["enable",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["end",{"_index":373,"title":{},"body":{"components/CardComponent.html":{},"index.html":{}}}],["entertainment",{"_index":440,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["environment",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":716,"title":{},"body":{"index.html":{}}}],["export",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["exports",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extract",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":558,"title":{},"body":{"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["feed",{"_index":359,"title":{},"body":{"components/CardComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{}}}],["feed'},{'name",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["feed.component.css",{"_index":465,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":466,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/card.service",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["feed/feed.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["feedcomponent",{"_index":231,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fetching",{"_index":548,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["ff084a",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["ffa31a",{"_index":358,"title":{},"body":{"components/CardComponent.html":{}}}],["fff",{"_index":588,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{}}}],["files",{"_index":701,"title":{},"body":{"index.html":{}}}],["filter",{"_index":446,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["find",{"_index":509,"title":{},"body":{"injectables/SearchService.html":{}}}],["finding",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":724,"title":{},"body":{"index.html":{}}}],["fit",{"_index":363,"title":{},"body":{"components/CardComponent.html":{}}}],["fixed",{"_index":630,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["flatten",{"_index":645,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["flex",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["font",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["found",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["further",{"_index":728,"title":{},"body":{"index.html":{}}}],["general",{"_index":438,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["generate",{"_index":704,"title":{},"body":{"index.html":{}}}],["generated",{"_index":685,"title":{},"body":{"index.html":{}}}],["getarticleauthor",{"_index":322,"title":{},"body":{"components/CardComponent.html":{}}}],["getarticledescription",{"_index":320,"title":{},"body":{"components/CardComponent.html":{}}}],["getarticlepublishedat",{"_index":326,"title":{},"body":{"components/CardComponent.html":{}}}],["getarticlesource",{"_index":324,"title":{},"body":{"components/CardComponent.html":{}}}],["getarticletitle",{"_index":317,"title":{},"body":{"components/CardComponent.html":{}}}],["getcategory",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["geteverything",{"_index":386,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{}}}],["getspinnerobs",{"_index":633,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["getting",{"_index":682,"title":{"index.html":{}},"body":{}}],["geturl",{"_index":387,"title":{},"body":{"injectables/CardService.html":{}}}],["given",{"_index":401,"title":{},"body":{"injectables/CardService.html":{}}}],["go",{"_index":731,"title":{},"body":{"index.html":{}}}],["graph",{"_index":738,"title":{},"body":{"modules.html":{}}}],["h1",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{}}}],["headlines?country=us&category",{"_index":435,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["headlines?country=us&category=general&apikey=ca343f5fb14c4fe9946c2af070bdf527",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{}}}],["health",{"_index":441,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["height",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["help",{"_index":729,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["hide",{"_index":559,"title":{},"body":{"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["hides",{"_index":505,"title":{},"body":{"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["home",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["homebutton",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["htmlelement",{"_index":562,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["http",{"_index":394,"title":{},"body":{"injectables/CardService.html":{}}}],["http://localhost:4200",{"_index":697,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":389,"title":{},"body":{"injectables/CardService.html":{}}}],["httpclientmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["https://newsapi.org/v2/top",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{}}}],["icon",{"_index":448,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["icon:hover",{"_index":454,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["id",{"_index":540,"title":{},"body":{"interfaces/Source.html":{}}}],["identifier",{"_index":541,"title":{},"body":{"interfaces/Source.html":{},"coverage.html":{}}}],["ignore",{"_index":329,"title":{},"body":{"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"injectables/SpinnerService.html":{}}}],["image",{"_index":297,"title":{},"body":{"interfaces/Article.html":{}}}],["img",{"_index":361,"title":{},"body":{"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["implements",{"_index":300,"title":{},"body":{"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["import",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["imports",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includes",{"_index":391,"title":{},"body":{"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":582,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["information",{"_index":291,"title":{},"body":{"interfaces/Article.html":{},"injectables/CardService.html":{}}}],["initializes",{"_index":472,"title":{},"body":{"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["injectable",{"_index":379,"title":{"injectables/CardService.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}},"body":{"injectables/CardService.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{},"coverage.html":{}}}],["injectables",{"_index":380,"title":{},"body":{"injectables/CardService.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{},"overview.html":{}}}],["inline",{"_index":573,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["input",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["inputs",{"_index":305,"title":{},"body":{"components/CardComponent.html":{}}}],["interface",{"_index":286,"title":{"interfaces/Article.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}},"body":{"interfaces/Article.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{},"coverage.html":{}}}],["interfaces",{"_index":288,"title":{},"body":{"interfaces/Article.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{},"overview.html":{}}}],["invert(0",{"_index":456,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["invert(70",{"_index":447,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["italic",{"_index":372,"title":{},"body":{"components/CardComponent.html":{}}}],["items",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["justify",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["karma",{"_index":718,"title":{},"body":{"index.html":{}}}],["key",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["keyframes",{"_index":627,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["lds",{"_index":571,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["left",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["legend",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["letter",{"_index":368,"title":{},"body":{"components/CardComponent.html":{}}}],["lightgray",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["linear",{"_index":581,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["list",{"_index":473,"title":{},"body":{"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["literal",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logo",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["logo:hover",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["makes",{"_index":382,"title":{},"body":{"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["map",{"_index":486,"title":{},"body":{"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["map((articles",{"_index":534,"title":{},"body":{"injectables/SearchService.html":{}}}],["map((result",{"_index":477,"title":{},"body":{"components/FeedComponent.html":{}}}],["margin",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["mat",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["matbuttonmodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["matched",{"_index":483,"title":{},"body":{"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["matches",{"_index":512,"title":{},"body":{"injectables/SearchService.html":{}}}],["matching",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenav",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["media",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["menu",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["method",{"_index":319,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["min",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["miscellaneous",{"_index":741,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":239,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":241,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":730,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"index.html":{}}}],["navigate",{"_index":696,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":418,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["need",{"_index":723,"title":{},"body":{"index.html":{}}}],["new",{"_index":340,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{},"coverage.html":{},"index.html":{}}}],["news",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["newsresponse",{"_index":406,"title":{"interfaces/NewsResponse.html":{}},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"coverage.html":{}}}],["newswebsite",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["newurl",{"_index":402,"title":{},"body":{"injectables/CardService.html":{}}}],["next",{"_index":639,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["ng",{"_index":693,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":330,"title":{},"body":{"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["none",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["normal",{"_index":366,"title":{},"body":{"components/CardComponent.html":{}}}],["null",{"_index":298,"title":{},"body":{"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"interfaces/Source.html":{}}}],["number",{"_index":494,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["object",{"_index":362,"title":{},"body":{"components/CardComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":404,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}}}],["observer",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["obtained",{"_index":464,"title":{},"body":{"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{}}}],["obtaining",{"_index":551,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["official",{"_index":572,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["old",{"_index":400,"title":{},"body":{"injectables/CardService.html":{}}}],["onchange",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["onchange(event",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["one",{"_index":433,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["ones",{"_index":510,"title":{},"body":{"injectables/SearchService.html":{}}}],["oninit",{"_index":301,"title":{},"body":{"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["opacity",{"_index":628,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["opens",{"_index":315,"title":{},"body":{"components/CardComponent.html":{}}}],["openurl",{"_index":304,"title":{},"body":{"components/CardComponent.html":{}}}],["openurl(url",{"_index":313,"title":{},"body":{"components/CardComponent.html":{}}}],["optional",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{}}}],["origin",{"_index":577,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["out",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":342,"title":{},"body":{"components/CardComponent.html":{}}}],["over",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["overflow",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["overlay",{"_index":629,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["overview",{"_index":733,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":450,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["package",{"_index":669,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["page",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"index.html":{}}}],["param",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{}}}],["parameters",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{}}}],["pass",{"_index":635,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["performing",{"_index":392,"title":{},"body":{"injectables/CardService.html":{}}}],["performs",{"_index":396,"title":{},"body":{"injectables/CardService.html":{}}}],["pipe",{"_index":476,"title":{},"body":{"components/FeedComponent.html":{}}}],["place",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchService.html":{}}}],["platform",{"_index":720,"title":{},"body":{"index.html":{}}}],["playfair",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["pointer",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["position",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/SpinnerComponent.html":{}}}],["possible",{"_index":420,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["predefined",{"_index":395,"title":{},"body":{"injectables/CardService.html":{}}}],["private",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["production",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":684,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"injectables/CardService.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["providedin",{"_index":411,"title":{},"body":{"injectables/CardService.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}}}],["providers",{"_index":278,"title":{},"body":{"modules/AppModule.html":{}}}],["pt",{"_index":357,"title":{},"body":{"components/CardComponent.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}}}],["publishedat",{"_index":293,"title":{},"body":{"interfaces/Article.html":{}}}],["publishing",{"_index":295,"title":{},"body":{"interfaces/Article.html":{},"components/CardComponent.html":{}}}],["radius",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["redirecting",{"_index":316,"title":{},"body":{"components/CardComponent.html":{}}}],["reference",{"_index":734,"title":{},"body":{"index.html":{}}}],["refreshes",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":574,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["releasing",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["reload",{"_index":699,"title":{},"body":{"index.html":{}}}],["reloading",{"_index":434,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["replaces",{"_index":399,"title":{},"body":{"injectables/CardService.html":{}}}],["request",{"_index":383,"title":{},"body":{"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{}}}],["requesting",{"_index":426,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["requests",{"_index":393,"title":{},"body":{"injectables/CardService.html":{}}}],["require",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.matches",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["resembles",{"_index":543,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["reset",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":405,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{}}}],["result",{"_index":525,"title":{},"body":{"injectables/SearchService.html":{}}}],["result.articles",{"_index":478,"title":{},"body":{"components/FeedComponent.html":{}}}],["results",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}}}],["returned",{"_index":496,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["returns",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["reverse",{"_index":360,"title":{},"body":{"components/CardComponent.html":{}}}],["rgb(0",{"_index":344,"title":{},"body":{"components/CardComponent.html":{}}}],["rgb(206",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(0",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["right",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["roman",{"_index":341,"title":{},"body":{"components/CardComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{}}}],["root'},{'name",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["rotate(0deg",{"_index":591,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(120deg",{"_index":604,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(150deg",{"_index":607,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(180deg",{"_index":610,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(210deg",{"_index":613,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(240deg",{"_index":616,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(270deg",{"_index":619,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(300deg",{"_index":622,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(30deg",{"_index":595,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(330deg",{"_index":625,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(60deg",{"_index":598,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(90deg",{"_index":601,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["routermodule",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":282,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["run",{"_index":692,"title":{},"body":{"index.html":{}}}],["running",{"_index":712,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":409,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":487,"title":{},"body":{"components/FeedComponent.html":{}}}],["scaffolding",{"_index":703,"title":{},"body":{"index.html":{}}}],["science",{"_index":442,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["screen",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["search",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["search(collectionobs",{"_index":514,"title":{},"body":{"injectables/SearchService.html":{}}}],["search.service",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{}}}],["searchbar",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["searched",{"_index":518,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchedarticles",{"_index":467,"title":{},"body":{"components/FeedComponent.html":{}}}],["searches",{"_index":469,"title":{},"body":{"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["searchservice",{"_index":36,"title":{"injectables/SearchService.html":{}},"body":{"components/AppComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["searchterm",{"_index":531,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchtermobs",{"_index":498,"title":{},"body":{"injectables/SearchService.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["serif",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["serve",{"_index":694,"title":{},"body":{"index.html":{}}}],["server",{"_index":691,"title":{},"body":{"index.html":{}}}],["service",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["sessionstorage.getitem('newurl",{"_index":415,"title":{},"body":{"injectables/CardService.html":{}}}],["sessionstorage.setitem('newurl",{"_index":414,"title":{},"body":{"injectables/CardService.html":{}}}],["set",{"_index":430,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["sets",{"_index":637,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["setting",{"_index":638,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["seturl",{"_index":423,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["seturl(category",{"_index":428,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["shadow",{"_index":352,"title":{},"body":{"components/CardComponent.html":{}}}],["show",{"_index":561,"title":{},"body":{"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["shown",{"_index":552,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["shows",{"_index":504,"title":{},"body":{"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["side",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["sidebar",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["solid",{"_index":343,"title":{},"body":{"components/CardComponent.html":{}}}],["source",{"_index":4,"title":{"interfaces/Source.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{},"index.html":{}}}],["space",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["spacing",{"_index":369,"title":{},"body":{"components/CardComponent.html":{}}}],["spec\\.ts",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["spinner.component.css",{"_index":544,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.html",{"_index":545,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.service",{"_index":563,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.component",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["spinner/spinner.service",{"_index":519,"title":{},"body":{"injectables/SearchService.html":{}}}],["spinnercomponent",{"_index":233,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinnerobs",{"_index":632,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["spinnerservice",{"_index":501,"title":{"injectables/SpinnerService.html":{}},"body":{"injectables/SearchService.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"coverage.html":{}}}],["sports",{"_index":443,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:68",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:77",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/card/card.component.ts",{"_index":299,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/card/card.component.ts:15",{"_index":312,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:31",{"_index":314,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:38",{"_index":318,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:45",{"_index":321,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:54",{"_index":323,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:60",{"_index":325,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/card/card.component.ts:69",{"_index":327,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/categories/categories.component.ts",{"_index":417,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/categories/categories.component.ts:12",{"_index":425,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/categories/categories.component.ts:29",{"_index":429,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/feed/card.service.ts",{"_index":381,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/app/feed/card.service.ts:15",{"_index":408,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/feed/card.service.ts:16",{"_index":390,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/feed/card.service.ts:28",{"_index":407,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/feed/card.service.ts:36",{"_index":398,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/feed/card.service.ts:44",{"_index":403,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/feed/feed.component.ts",{"_index":461,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["src/app/feed/feed.component.ts:21",{"_index":479,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:32",{"_index":482,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:34",{"_index":468,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/feed/feed.component.ts:49",{"_index":471,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/search.service.ts",{"_index":497,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/search.service.ts:24",{"_index":517,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/search.service.ts:31",{"_index":515,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/search.service.ts:40",{"_index":502,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/search.service.ts:54",{"_index":508,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/spinner/spinner.component.ts",{"_index":542,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["src/app/spinner/spinner.component.ts:15",{"_index":547,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/spinner/spinner.component.ts:27",{"_index":550,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/spinner/spinner.component.ts:38",{"_index":555,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/spinner/spinner.service.ts",{"_index":631,"title":{},"body":{"injectables/SpinnerService.html":{},"coverage.html":{}}}],["src/app/spinner/spinner.service.ts:14",{"_index":644,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/spinner/spinner.service.ts:24",{"_index":634,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/spinner/spinner.service.ts:31",{"_index":641,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/app/spinner/spinner.service.ts:38",{"_index":636,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["src/environments/environment.prod.ts",{"_index":657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces/article",{"_index":328,"title":{},"body":{"components/CardComponent.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["src/interfaces/article.ts",{"_index":289,"title":{},"body":{"interfaces/Article.html":{},"coverage.html":{}}}],["src/interfaces/newsresponse",{"_index":410,"title":{},"body":{"injectables/CardService.html":{},"components/FeedComponent.html":{}}}],["src/interfaces/newsresponse.ts",{"_index":490,"title":{},"body":{"interfaces/NewsResponse.html":{},"coverage.html":{}}}],["src/interfaces/source.ts",{"_index":539,"title":{},"body":{"interfaces/Source.html":{},"coverage.html":{}}}],["src/test.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{}}}],["started",{"_index":683,"title":{"index.html":{}},"body":{}}],["state",{"_index":549,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["statements",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":492,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["sticky",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":491,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["stored",{"_index":709,"title":{},"body":{"index.html":{}}}],["string",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{}}}],["style",{"_index":365,"title":{},"body":{"components/CardComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["subject",{"_index":640,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["support",{"_index":735,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":736,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":523,"title":{},"body":{"injectables/SearchService.html":{}}}],["switchmap((searchterm",{"_index":529,"title":{},"body":{"injectables/SearchService.html":{}}}],["table",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"injectables/SearchService.html":{}}}],["tap",{"_index":524,"title":{},"body":{"injectables/SearchService.html":{}}}],["target",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["technology",{"_index":444,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["term",{"_index":507,"title":{},"body":{"injectables/SearchService.html":{}}}],["term.tolowercase",{"_index":536,"title":{},"body":{"injectables/SearchService.html":{}}}],["test",{"_index":715,"title":{},"body":{"index.html":{}}}],["testing",{"_index":726,"title":{},"body":{"index.html":{}}}],["tests",{"_index":714,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/SearchService.html":{}}}],["this.article",{"_index":332,"title":{},"body":{"components/CardComponent.html":{}}}],["this.article.author",{"_index":335,"title":{},"body":{"components/CardComponent.html":{}}}],["this.article.description",{"_index":334,"title":{},"body":{"components/CardComponent.html":{}}}],["this.article.publishedat",{"_index":337,"title":{},"body":{"components/CardComponent.html":{}}}],["this.article.source.name",{"_index":336,"title":{},"body":{"components/CardComponent.html":{}}}],["this.article.title",{"_index":333,"title":{},"body":{"components/CardComponent.html":{}}}],["this.articles",{"_index":481,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.cardservice",{"_index":475,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.cardservice.changeurl",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cardservice.changeurl(url",{"_index":437,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.cardservice.geteverything().pipe",{"_index":488,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.cardservice.geturl().split(/&category",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dosearch(collectionobs",{"_index":530,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.http.get(this.url",{"_index":416,"title":{},"body":{"injectables/CardService.html":{}}}],["this.observer.observe(['(max",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["this.searchservice.search",{"_index":480,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.searchservice.searchtermobs.next(value",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["this.searchtermobs.pipe",{"_index":526,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.sidenav.close",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.mode",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.open",{"_index":112,"title":{},"body":{"components/AppComponent.html":{}}}],["this.spinnercomponent",{"_index":564,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.spinnercomponent.style.display",{"_index":570,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.spinnerobs.asobservable",{"_index":647,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["this.spinnerobs.next(false",{"_index":649,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["this.spinnerobs.next(true",{"_index":648,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["this.spinnerservice.getspinnerobs().subscribe((state",{"_index":566,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.spinnerservice.hide",{"_index":532,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.spinnerservice.show",{"_index":528,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.togglespinner(state",{"_index":567,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["this.url",{"_index":413,"title":{},"body":{"injectables/CardService.html":{}}}],["through",{"_index":470,"title":{},"body":{"components/FeedComponent.html":{},"injectables/SearchService.html":{}}}],["times",{"_index":339,"title":{},"body":{"components/CardComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/SearchService.html":{}}}],["title.includes(term.tostring",{"_index":538,"title":{},"body":{"injectables/SearchService.html":{}}}],["title:hover",{"_index":354,"title":{},"body":{"components/CardComponent.html":{}}}],["titlecase",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["toggle",{"_index":556,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["togglespinner",{"_index":546,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["togglespinner(state",{"_index":553,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["toolbar",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["total",{"_index":495,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["totalresults",{"_index":493,"title":{},"body":{"interfaces/NewsResponse.html":{}}}],["transform",{"_index":349,"title":{},"body":{"components/CardComponent.html":{},"components/SpinnerComponent.html":{}}}],["translatey",{"_index":350,"title":{},"body":{"components/CardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["true",{"_index":560,"title":{},"body":{"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{},"miscellaneous/variables.html":{}}}],["truncates",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["tslib",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"interfaces/NewsResponse.html":{},"injectables/SearchService.html":{},"interfaces/Source.html":{},"components/SpinnerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["underline",{"_index":356,"title":{},"body":{"components/CardComponent.html":{}}}],["unit",{"_index":713,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":338,"title":{},"body":{"components/CardComponent.html":{}}}],["url",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{}}}],["urltoimage",{"_index":294,"title":{},"body":{"interfaces/Article.html":{}}}],["use",{"_index":705,"title":{},"body":{"index.html":{}}}],["used",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Article.html":{},"interfaces/NewsResponse.html":{},"interfaces/Source.html":{}}}],["value",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/FeedComponent.html":{},"injectables/SearchService.html":{},"injectables/SpinnerService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{}}}],["variable",{"_index":658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":742,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":688,"title":{},"body":{"index.html":{}}}],["via",{"_index":717,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(matsidenav",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["visible",{"_index":642,"title":{},"body":{"injectables/SpinnerService.html":{}}}],["void",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"components/CategoriesComponent.html":{},"components/FeedComponent.html":{},"components/SpinnerComponent.html":{},"injectables/SpinnerService.html":{}}}],["webpage",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["website",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["white",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["whose",{"_index":511,"title":{},"body":{"injectables/SearchService.html":{}}}],["width",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/CategoriesComponent.html":{},"components/SpinnerComponent.html":{}}}],["window.location.reload",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesComponent.html":{}}}],["window.open(url",{"_index":331,"title":{},"body":{"components/CardComponent.html":{}}}],["x",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        The main component of the website\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sidenav\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCategory\n                            \n                            \n                                    Public\n                                homeButton\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                onChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(observer: BreakpointObserver, cardService: CardService, searchService: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            Declaration of parameters\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        observer\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An observer for checking the width of the webpage\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The card service that will be used to extract and display the category of the url\n\n                                                        \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The search service that will be called when there is input in the searchbar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCategory()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:68\n                \n            \n\n\n            \n                \n                    Truncates the category from the url string\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The category of the url\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        homeButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    homeButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n                    Refreshes the page if the title (home button) is clicked\"\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:42\n                \n            \n\n\n            \n                \n                    Decides if the sidebar menu should be displayed or not depending on the width\nof the screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    onChange(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:77\n                \n            \n\n\n            \n                \n                    Takes the input from the searchbar and calls the search service with that input value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An event which takes place in the DOM, in our case the releasing of a key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSidenav)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n            \n                \n                    The sidebar category menu\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NewsWebsite'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n            \n                \n                    The title of the website\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CardService } from './feed/card.service';\nimport { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { SearchService } from './search.service';\n\n/**\n * The main component of the website\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  /**\n   The title of the website\n   */\n  title = 'NewsWebsite';\n\n  /**\n   The sidebar category menu\n   */\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  /**\n   *Declaration of parameters\n   * @param observer An observer for checking the width of the webpage\n   * @param cardService The card service that will be used to extract and display the category of the url\n   * @param searchService The search service that will be called when there is input in the searchbar\n   */\n  constructor(\n    private observer: BreakpointObserver,\n    private cardService: CardService,\n    private searchService: SearchService\n  ) {}\n\n  /**\n   * Decides if the sidebar menu should be displayed or not depending on the width\n   * of the screen\n   */\n  ngAfterViewInit() {\n    this.observer.observe(['(max-width: 1450px)']).subscribe((res) => {\n      if (res.matches) {\n        this.sidenav.mode = 'over';\n        this.sidenav.close();\n      } else {\n        this.sidenav.mode = 'side';\n        this.sidenav.open();\n      }\n    });\n  }\n\n  /**\n   * Refreshes the page if the title (home button) is clicked\"\n   */\n  public homeButton(): void {\n    this.cardService.changeUrl(\n      'https://newsapi.org/v2/top-headlines?country=us&category=general&apiKey=ca343f5fb14c4fe9946c2af070bdf527'\n    );\n    window.location.reload();\n  }\n\n  /**\n   * Truncates the category from the url string\n   * @returns The category of the url\n   */\n  public getCategory(): string {\n    var category = this.cardService.getUrl().split(/&category=|&/);\n    return category[1];\n  }\n\n  /**\n   * Takes the input from the searchbar and calls the search service with that input value\n   * @param event An event which takes place in the DOM, in our case the releasing of a key\n   */\n  public onChange(event: Event): void {\n    const target = event.target;\n    const value = (target as any).value;\n    console.log(value);\n    this.searchService.searchTermObs.next(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n       menu \n       close \n    \n    Daily News\n  \n  \n\n\n\n  \n    \n  \n\n  \n    \n      {{ getCategory() | titlecase }}\n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .toolbar {\n  background: #1d1d1d;\n  color: white;\n  overflow: hidden;\n  height: 10%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n.logo {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 0.25%;\n}\n.logo > h1 {\n  font-family: \"Playfair Display\", serif;\n  cursor: pointer;\n}\n.logo:hover h1 {\n  color: rgb(206, 206, 206);\n}\nmat-sidenav {\n  margin: 16px;\n  width: 12.5%;\n  border-right: none;\n  background: #383838;\n  border-radius: 10px;\n  padding: 16px;\n  text-align: center;\n  height: 93%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\nmat-sidenav-container {\n  height: calc(100vh - 65px);\n  overflow: hidden;\n}\n.dashboard {\n  background-color: #4b4b4b;\n  position: sticky;\n  height: 93%;\n}\n.content {\n  height: 87.2%;\n  margin: 16px;\n  margin-left: 5%;\n  right: 5%;\n  display: block;\n  padding-top: 1%;\n  padding-bottom: 2%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  font-size: 2em;\n  color: lightgray;\n  background-color: #383838;\n  border-radius: 20px;\n}\n.content > h1 {\n  font-family: \"Playfair Display\", serif;\n  padding-left: 2%;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-size: 20px;\n  color: #ff084a;\n}\n\n@media only screen and (min-width: 100px) {\n  .mat-sidenav {\n    width: 90%;\n  }\n  .content > h1 {\n    font-size: 14px;\n  }\n}\n@media only screen and (min-width: 300px) {\n  .mat-sidenav {\n    width: 50%;\n  }\n  .content > h1 {\n    font-size: 14px;\n  }\n}\n@media only screen and (min-width: 410px) {\n  .mat-sidenav {\n    width: 40%;\n  }\n  .content > h1 {\n    font-size: 16px;\n  }\n}\n@media only screen and (min-width: 520px) {\n  .mat-sidenav {\n    width: 30%;\n  }\n  .content > h1 {\n    font-size: 20px;\n  }\n}\n@media only screen and (min-width: 910px) {\n  .mat-sidenav {\n    width: 20%;\n  }\n}\n\n.searchBar {\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  width: 20%;\n  max-width: 200px;\n  min-width: 100px;\n  height: 25px;\n  border-radius: 8px;\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             menu        close         Daily News                        {{ getCategory() | titlecase }}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nAppModule -->\n\nCardComponent->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CardComponent\n                        \n                        \n                            CategoriesComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { FeedComponent } from './feed/feed.component';\nimport { CardComponent } from './card/card.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardComponent,\n    FeedComponent,\n    CategoriesComponent,\n    SpinnerComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDividerModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Article.html":{"url":"interfaces/Article.html","title":"interface - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Article.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the article, used to categorize information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            publishedAt\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            urlToImage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The author of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The description of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publishedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publishedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The publishing date of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         Source\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Source\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The source of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url of the article\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urlToImage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urlToImage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url of the image of the article\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Source } from './Source';\n/**\n * Interface for the article, used to categorize information\n */\nexport interface Article {\n  /**\n   * The source of the article\n   */\n  source: Source;\n  /**\n   * The author of the article\n   */\n  author?: null;\n  /**\n   * The title of the article\n   */\n  title: string;\n  /**\n   * The description of the article\n   */\n  description: string;\n  /**\n   * The url of the article\n   */\n  url: string;\n  /**\n   * The url of the image of the article\n   */\n  urlToImage: string;\n  /**\n   * The publishing date of the article\n   */\n  publishedAt: string;\n  /**\n   * The description of the article\n   */\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/card/card.component.ts\n\n\n\n    \n        Description\n    \n    \n        The card component, every article is displayed in a card\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                styleUrls\n                ./card.component.css\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                article\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    articleTitle\n                                \n                                \n                                    articleDescription\n                                \n                                \n                                    articleAuthor\n                                \n                                \n                                    articleSource\n                                \n                                \n                                    articlePublishedAt\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        article\n                    \n                \n                \n                    \n                        Type :         Article\n\n                    \n                \n                \n                    \n                        Default value : {} as Article\n                    \n                \n                        \n                            \n                                    Defined in src/app/card/card.component.ts:15\n                            \n                        \n                \n                    \n                        The article that the card will display\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openUrl\n                        \n                    \n                \n            \n            \n                \nopenUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/card/card.component.ts:31\n                \n            \n\n\n            \n                \n                    Opens the url of the article, redirecting to the page of the article\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The url of the article\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        articleTitle\n                    \n                \n\n                \n                    \n                        getarticleTitle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card/card.component.ts:38\n                                \n                            \n                    \n                        \n                                Get method for the title of the article\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        articleDescription\n                    \n                \n\n                \n                    \n                        getarticleDescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card/card.component.ts:45\n                                \n                            \n                    \n                        \n                                Get method for the description of the article\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        articleAuthor\n                    \n                \n\n                \n                    \n                        getarticleAuthor()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card/card.component.ts:54\n                                \n                            \n                    \n                        \n                                Get method for the author of the article\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        articleSource\n                    \n                \n\n                \n                    \n                        getarticleSource()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card/card.component.ts:60\n                                \n                            \n                    \n                        \n                                Get method for the source of the article\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        articlePublishedAt\n                    \n                \n\n                \n                    \n                        getarticlePublishedAt()\n                    \n                \n                            \n                                \n                                    Defined in src/app/card/card.component.ts:69\n                                \n                            \n                    \n                        \n                                Get method for the publishing date of the article\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Article } from 'src/interfaces/Article';\n/**\n * The card component, every article is displayed in a card\n */\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n})\nexport class CardComponent implements OnInit {\n  /**\n   * The article that the card will display\n   */\n  @Input() article: Article = {} as Article;\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Opens the url of the article, redirecting to the page of the article\n   * @param url The url of the article\n   */\n  openUrl(url: string): void {\n    window.open(url);\n  }\n\n  /**\n   * Get method for the title of the article\n   */\n  get articleTitle() {\n    return this.article && this.article.title ? this.article.title : null;\n  }\n\n  /**\n   * Get method for the description of the article\n   */\n  get articleDescription() {\n    return this.article && this.article.description\n      ? this.article.description\n      : null;\n  }\n\n  /**\n   * Get method for the author of the article\n   */\n  get articleAuthor() {\n    return this.article && this.article.author ? this.article.author : '';\n  }\n  /**\n   * Get method for the source of the article\n   */\n  get articleSource() {\n    return this.article && this.article.source.name\n      ? this.article.source.name\n      : null;\n  }\n\n  /**\n   * Get method for the publishing date of the article\n   */\n  get articlePublishedAt() {\n    return this.article && this.article.publishedAt\n      ? this.article.publishedAt\n      : null;\n  }\n}\n\n    \n\n    \n        \n  \n    {{ articleTitle }}\n  \n  \n    \n\n    \n      \n        {{ articleDescription }}\n      \n      \n        \n          {{ articleAuthor }} | {{ articleSource | uppercase }}\n        \n        \n          {{ articlePublishedAt | date }}\n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./card.component.css\n                \n                .card {\n  font-family: \"Times New Roman\", Times, serif;\n  border-radius: 20px;\n  outline: solid rgb(0, 0, 0);\n  outline-width: 1px;\n  padding: 15px;\n  margin-bottom: 10px;\n  background-color: #292929;\n}\n.card:hover {\n  transform: translateY(-0.5%);\n  box-shadow: 0 20px 20px rgba(0, 0, 0, 0.3);\n}\n.title {\n  cursor: pointer;\n}\n.title:hover {\n  text-decoration: underline;\n}\n.title > h1 {\n  margin-top: 5px;\n  font-family: \"PT Serif\", serif;\n  font-size: 20px;\n  color: #ffa31a;\n}\n.card-feed {\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n}\n.card-text {\n  font-size: 16px;\n  max-width: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.card-img {\n  max-width: 50%;\n  max-height: 50%;\n  min-width: 40%;\n  max-width: 40%;\n  object-fit: cover;\n}\n.author {\n  font-family: \"PT Serif\", serif;\n  font-style: normal;\n  color: #a1236d;\n  letter-spacing: 1px;\n  font-size: 13px;\n}\n.description {\n  font-family: \"PT Serif\", serif;\n  font-style: normal;\n  color: #edf2f4;\n}\n.date {\n  font-family: \"PT Serif\", serif;\n  font-style: italic;\n  justify-content: flex-end;\n  color: #8d99ae;\n}\n@media only screen and (max-width: 500px) {\n  .card-feed {\n    flex-direction: column;\n    justify-content: start;\n    width: 100%;\n  }\n  .card-text {\n    max-width: 100%;\n  }\n  .card-img {\n    min-width: 100%;\n    min-height: 100%;\n    margin-bottom: 5px;\n  }\n  .title > h1 {\n    font-size: 15px;\n  }\n  .description {\n    font-size: 12px;\n  }\n  .author {\n    font-size: 10px;\n  }\n  .date {\n    font-size: 12px;\n  }\n}\n@media only screen and (min-width: 500px) {\n  .title > h1 {\n    font-size: 18px;\n  }\n  .description {\n    font-size: 14px;\n  }\n  .author {\n    font-size: 12px;\n  }\n  .date {\n    font-size: 14px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ articleTitle }}                          {{ articleDescription }}                              {{ articleAuthor }} | {{ articleSource | uppercase }}                          {{ articlePublishedAt | date }}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/feed/card.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The service that makes a request to the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeUrl\n                            \n                            \n                                    Public\n                                getEverything\n                            \n                            \n                                    Public\n                                getUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed/card.service.ts:16\n                            \n                        \n\n                \n                    \n                            Includes the HttpClient class for performing API requests\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A predefined class that performs HTTP requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeUrl(newUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/card.service.ts:36\n                \n            \n\n\n            \n                \n                    Replaces the old url with the new given url\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new url\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getEverything\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEverything()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/card.service.ts:44\n                \n            \n\n\n            \n                \n                    Requests information from the API\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The API response as an Observable of NewsResponse type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/card.service.ts:28\n                \n            \n\n\n            \n                \n                    Get method for the url\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The url of the API\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://newsapi.org/v2/top-headlines?country=us&category=general&apiKey=ca343f5fb14c4fe9946c2af070bdf527'\n                    \n                \n                    \n                        \n                                Defined in src/app/feed/card.service.ts:15\n                        \n                    \n\n            \n                \n                    The url of the API\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NewsResponse } from 'src/interfaces/NewsResponse';\n/**\n * The service that makes a request to the API\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CardService {\n  /**\n   * The url of the API\n   */\n  private url: string =\n    'https://newsapi.org/v2/top-headlines?country=us&category=general&apiKey=ca343f5fb14c4fe9946c2af070bdf527';\n\n  /**\n   * Includes the HttpClient class for performing API requests\n   * @param http A predefined class that performs HTTP requests\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Get method for the url\n   * @returns The url of the API\n   */\n  public getUrl(): string {\n    return this.url;\n  }\n\n  /**\n   * Replaces the old url with the new given url\n   * @param newUrl The new url\n   */\n  public changeUrl(newUrl: string): void {\n    sessionStorage.setItem('newUrl', newUrl);\n  }\n\n  /**\n   * Requests information from the API\n   * @returns The API response as an Observable of NewsResponse type\n   */\n  public getEverything(): Observable {\n    if (sessionStorage.getItem('newUrl') != null) {\n      this.url = sessionStorage.getItem('newUrl');\n    }\n    return this.http.get(this.url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/categories/categories.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component that makes the navigation between categories possible\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n            \n                styleUrls\n                ./categories.component.css\n            \n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cardService: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/categories/categories.component.ts:12\n                            \n                        \n\n                \n                    \n                            Includes the card service for requesting articles from the right category\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service that makes a request to the API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    setUrl(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/categories/categories.component.ts:29\n                \n            \n\n\n            \n                \n                    Method to set the url by changing the category to the desired one\nand reloading the page with the new category\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The category of the news\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CardService } from './../feed/card.service';\nimport { Component, OnInit } from '@angular/core';\n\n/**\n * The component that makes the navigation between categories possible\n */\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css'],\n})\nexport class CategoriesComponent implements OnInit {\n  /**\n   * Includes the card service for requesting articles from the right category\n   * @param cardService The service that makes a request to the API\n   */\n  constructor(private cardService: CardService) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Method to set the url by changing the category to the desired one\n   * and reloading the page with the new category\n   * @param category The category of the news\n   */\n  public setUrl(category: string): void {\n    var url =\n      'https://newsapi.org/v2/top-headlines?country=us&category=' +\n      category +\n      '&apiKey=ca343f5fb14c4fe9946c2af070bdf527';\n    this.cardService.changeUrl(url);\n    window.location.reload();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    General\n  \n\n  \n    \n    Business\n  \n\n  \n    \n    Entertainment\n  \n\n  \n    \n    Health\n  \n\n  \n    \n    Science\n  \n\n  \n    \n    Sports\n  \n\n  \n    \n    Technology\n  \n\n\n    \n\n    \n                \n                    ./categories.component.css\n                \n                .categories {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n}\nimg {\n  width: 4ch;\n  padding-right: 5px;\n  filter: invert(70%);\n}\n\n.icon {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-bottom: 0.9375rem;\n}\np {\n  color: #70c8e2;\n  font-family: \"Playfair Display\", serif;\n  font-size: 18px;\n  cursor: pointer;\n  padding-top: 0.6rem;\n  padding-left: 0.1rem;\n}\n\n.icon:hover p {\n  color: #5cb85c;\n}\n.icon:hover img {\n  filter: invert(0%);\n  cursor: pointer;\n}\n\n@media (max-width: 599px) {\n  p {\n    font-size: 11px;\n  }\n}\n@media only screen and (min-width: 600px) {\n  p {\n    font-size: 14px;\n  }\n}\n@media only screen and (min-width: 990px) {\n  p {\n    font-size: 18px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          General            Business            Entertainment            Health            Science            Sports            Technology  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feed/feed.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component that displays each article obtained from the API response\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                articles\n                            \n                            \n                                    Public\n                                searchedArticles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cardService: CardService, searchService: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/feed/feed.component.ts:34\n                            \n                        \n\n                \n                    \n                            Includes the card service and the search service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service that makes a request to the API\n\n                                                        \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service that searches through the articles\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/feed/feed.component.ts:49\n                \n            \n\n\n            \n                \n                    Initializes the list of articles with the data obtained from the API response\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.cardService\n    .getEverything()\n    .pipe(\n      map((result: NewsResponse) => {\n        return result.articles;\n      })\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/feed/feed.component.ts:21\n                        \n                    \n\n            \n                \n                    The list of articles obtained from the API response\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchedArticles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.searchService.search(\n    this.articles\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/feed/feed.component.ts:32\n                        \n                    \n\n            \n                \n                    The articles that matched the input value from the search bar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { SearchService } from './../search.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NewsResponse } from 'src/interfaces/NewsResponse';\nimport { CardService } from './card.service';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Article } from 'src/interfaces/Article';\n\n/**\n * The component that displays each article obtained from the API response\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css'],\n})\nexport class FeedComponent implements OnInit {\n  /**\n   * The list of articles obtained from the API response\n   */\n  public articles: Observable = this.cardService\n    .getEverything()\n    .pipe(\n      map((result: NewsResponse) => {\n        return result.articles;\n      })\n    );\n\n  /**\n   * The articles that matched the input value from the search bar\n   */\n  public searchedArticles: Observable = this.searchService.search(\n    this.articles\n  );\n\n  /**\n   * Includes the card service and the search service\n   * @param cardService The service that makes a request to the API\n   * @param searchService The service that searches through the articles\n   */\n  constructor(\n    private cardService: CardService,\n    private searchService: SearchService\n  ) {}\n\n  /**\n   * Initializes the list of articles with the data obtained from the API response\n   */\n  ngOnInit(): void {\n    this.articles = this.cardService.getEverything().pipe(\n      map((result: NewsResponse) => {\n        return result.articles;\n      })\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                .feed {\n  display: flex;\n  padding-top: 0.2%;\n  padding-bottom: 0.2%;\n  padding-left: 5%;\n  padding-right: 5%;\n  flex-direction: column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsResponse.html":{"url":"interfaces/NewsResponse.html","title":"interface - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/NewsResponse.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for API response, used in feed component and card service to store data obtained from API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            articles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            totalResults\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        articles:         Article[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Article[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The articles that were obtained from API response\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the response\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalResults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalResults:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total number of the returned results\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Article } from './Article';\n/**\n * Interface for API response, used in feed component and card service to store data obtained from API\n */\nexport interface NewsResponse {\n  /**\n   * The status of the response\n   */\n  status: String;\n\n  /**\n   * The total number of the returned results\n   */\n\n  totalResults: number;\n  /**\n   * The articles that were obtained from API response\n   */\n  articles: Article[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The service that searches through the articles\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchTermObs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doSearch\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/search.service.ts:40\n                            \n                        \n\n                \n                    \n                            Includes the spinner service for displaying the spinner while the search takes place\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        spinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service that shows or hides the spinner\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doSearch\n                        \n                    \n                \n            \n            \n                \n                    \n                    doSearch(collectionObs: Observable, term: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/search.service.ts:54\n                \n            \n\n\n            \n                \n                    Searches through the articles to find the ones whose title matches the desired text\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collectionObs\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of articles obtained from the API response\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input value from the search bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The articles whose title matched the input from the search bar\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        search\n                        \n                    \n                \n            \n            \n                \n                    \n                    search(collectionObs: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/search.service.ts:31\n                \n            \n\n\n            \n                \n                    Shows the spinner while the search takes place, and then returns the matching articles\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collectionObs\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of articles obtained from the API response\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The articles whose title matched the input\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchTermObs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/search.service.ts:24\n                        \n                    \n\n            \n                \n                    The list of articles to be searched, obtained from the API response\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { SpinnerService } from './spinner/spinner.service';\nimport { Injectable } from '@angular/core';\nimport {\n  BehaviorSubject,\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  Observable,\n  switchMap,\n  tap,\n} from 'rxjs';\nimport { Article } from 'src/interfaces/Article';\n\n/**\n * The service that searches through the articles\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  /**\n   * The list of articles to be searched, obtained from the API response\n   */\n  public searchTermObs = new BehaviorSubject(undefined);\n\n  /**\n   * Shows the spinner while the search takes place, and then returns the matching articles\n   * @param collectionObs The list of articles obtained from the API response\n   * @returns The articles whose title matched the input\n   */\n  public search(collectionObs: Observable): Observable {\n    const result = this.searchTermObs.pipe(\n      distinctUntilChanged(),\n      debounceTime(400),\n      tap(() => this.spinnerService.show()),\n      switchMap((searchTerm) => this.doSearch(collectionObs, searchTerm)),\n      tap(() => this.spinnerService.hide())\n    );\n    return result;\n  }\n\n  /**\n   * Includes the spinner service for displaying the spinner while the search takes place\n   * @param spinnerService The service that shows or hides the spinner\n   */\n  constructor(private spinnerService: SpinnerService) {}\n\n  /**\n   * Searches through the articles to find the ones whose title matches the desired text\n   * @param collectionObs The list of articles obtained from the API response\n   * @param term The input value from the search bar\n   * @returns The articles whose title matched the input from the search bar\n   */\n  private doSearch(collectionObs: Observable, term: String) {\n    return collectionObs.pipe(\n      map((articles: Article[]) => {\n        if (!term) {\n          return articles;\n        }\n        const result = articles.filter((article: Article) => {\n          term = term.toLowerCase();\n          const title = article.title.toLowerCase();\n          return title.includes(term.toString());\n        });\n        return result;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Source.html":{"url":"interfaces/Source.html","title":"interface - Source","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Source\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/Source.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the source of the article, used in the Article Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Identifier for the source\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the source\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Source {\n  /**\n   * Identifier for the source\n   */\n  id?: null;\n\n  /**\n   * The name of the source\n   */\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/spinner/spinner.component.ts\n\n\n\n    \n        Description\n    \n    \n        The component that resembles the spinner\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinnerComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                toggleSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(SpinnerService: SpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/spinner/spinner.component.ts:15\n                            \n                        \n\n                \n                    \n                            Includes the spinner service for fetching data about the state of the spinner\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        SpinnerService\n                                                  \n                                                        \n                                                                        SpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service that shows or hides the spinner\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/spinner/spinner.component.ts:27\n                \n            \n\n\n            \n                \n                    Initializes the component by obtaining its state; depending on that state,\nthe spinner is shown or hidden\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleSpinner\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleSpinner(state: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/spinner/spinner.component.ts:38\n                \n            \n\n\n            \n                \n                    Method to toggle the spinner between shown and hidden based on its display state\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The display state of the spinner, if false - hide, if true - show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinnerComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/spinner/spinner.component.ts:15\n                        \n                    \n\n            \n                \n                    The spinner as an HTML Element\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { SpinnerService } from './spinner.service';\nimport { Component, OnInit } from '@angular/core';\n/**\n * The component that resembles the spinner\n */\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css'],\n})\nexport class SpinnerComponent implements OnInit {\n  /**\n   * The spinner as an HTML Element\n   */\n  private spinnerComponent: HTMLElement;\n\n  /**\n   * Includes the spinner service for fetching data about the state of the spinner\n   * @param SpinnerService The service that shows or hides the spinner\n   */\n  constructor(private SpinnerService: SpinnerService) {}\n\n  /**\n   * Initializes the component by obtaining its state; depending on that state,\n   * the spinner is shown or hidden\n   */\n  ngOnInit(): void {\n    this.spinnerComponent = document.getElementById('spinner');\n    this.SpinnerService.getSpinnerObs().subscribe((state) => {\n      this.toggleSpinner(state);\n    });\n  }\n\n  /**\n   * Method to toggle the spinner between shown and hidden based on its display state\n   * @param state The display state of the spinner, if false - hide, if true - show\n   */\n  private toggleSpinner(state: boolean): void {\n    const displayStatus = state ? 'block' : 'none';\n    console.log(state);\n    this.spinnerComponent.style.display = displayStatus;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./spinner.component.css\n                \n                .lds-spinner {\n  color: official;\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-spinner div {\n  transform-origin: 40px 40px;\n  animation: lds-spinner 1.2s linear infinite;\n}\n.lds-spinner div:after {\n  content: \" \";\n  display: block;\n  position: absolute;\n  top: 3px;\n  left: 37px;\n  width: 6px;\n  height: 18px;\n  border-radius: 20%;\n  background: #fff;\n}\n.lds-spinner div:nth-child(1) {\n  transform: rotate(0deg);\n  animation-delay: -1.1s;\n}\n.lds-spinner div:nth-child(2) {\n  transform: rotate(30deg);\n  animation-delay: -1s;\n}\n.lds-spinner div:nth-child(3) {\n  transform: rotate(60deg);\n  animation-delay: -0.9s;\n}\n.lds-spinner div:nth-child(4) {\n  transform: rotate(90deg);\n  animation-delay: -0.8s;\n}\n.lds-spinner div:nth-child(5) {\n  transform: rotate(120deg);\n  animation-delay: -0.7s;\n}\n.lds-spinner div:nth-child(6) {\n  transform: rotate(150deg);\n  animation-delay: -0.6s;\n}\n.lds-spinner div:nth-child(7) {\n  transform: rotate(180deg);\n  animation-delay: -0.5s;\n}\n.lds-spinner div:nth-child(8) {\n  transform: rotate(210deg);\n  animation-delay: -0.4s;\n}\n.lds-spinner div:nth-child(9) {\n  transform: rotate(240deg);\n  animation-delay: -0.3s;\n}\n.lds-spinner div:nth-child(10) {\n  transform: rotate(270deg);\n  animation-delay: -0.2s;\n}\n.lds-spinner div:nth-child(11) {\n  transform: rotate(300deg);\n  animation-delay: -0.1s;\n}\n.lds-spinner div:nth-child(12) {\n  transform: rotate(330deg);\n  animation-delay: 0s;\n}\n@keyframes lds-spinner {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n.overlay {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n#center {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'SpinnerComponent', 'selector': 'app-spinner'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpinnerService.html":{"url":"injectables/SpinnerService.html","title":"injectable - SpinnerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpinnerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/spinner/spinner.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The service that shows or hides the spinner\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinnerObs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSpinnerObs\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSpinnerObs\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSpinnerObs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/spinner/spinner.service.ts:24\n                \n            \n\n\n            \n                \n                    Method to pass data about the spinner to other components\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        The data about the spinner as an Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        hide\n                        \n                    \n                \n            \n            \n                \n                    \n                    hide()\n                \n            \n\n\n            \n                \n                    Defined in src/app/spinner/spinner.service.ts:38\n                \n            \n\n\n            \n                \n                    Sets the spinner as hidden by setting the next value of the subject to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        show\n                        \n                    \n                \n            \n            \n                \n                    \n                    show()\n                \n            \n\n\n            \n                \n                    Defined in src/app/spinner/spinner.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets the spinner as visible by setting the next value of the subject to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinnerObs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/spinner/spinner.service.ts:14\n                        \n                    \n\n            \n                \n                    Observable to pass data about the spinner to other components\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { flatten } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n/**\n * The service that shows or hides the spinner\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpinnerService {\n  /**\n   * Observable to pass data about the spinner to other components\n   */\n  private spinnerObs = new BehaviorSubject(false);\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Method to pass data about the spinner to other components\n   * @returns The data about the spinner as an Observable\n   */\n  public getSpinnerObs(): Observable {\n    return this.spinnerObs.asObservable();\n  }\n\n  /**\n   * Sets the spinner as visible by setting the next value of the subject to true\n   */\n  public show(): void {\n    this.spinnerObs.next(true);\n  }\n\n  /**\n   * Sets the spinner as hidden by setting the next value of the subject to false\n   */\n  public hide(): void {\n    this.spinnerObs.next(false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/feed/card.service.ts\n            \n            injectable\n            CardService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/search.service.ts\n            \n            injectable\n            SearchService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/spinner/spinner.service.ts\n            \n            injectable\n            SpinnerService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/interfaces/Article.ts\n            \n            interface\n            Article\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/interfaces/NewsResponse.ts\n            \n            interface\n            NewsResponse\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/interfaces/Source.ts\n            \n            interface\n            Source\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.0.0\n        \n            @angular/cdk : ^13.0.0\n        \n            @angular/common : ~13.0.0\n        \n            @angular/compiler : ~13.0.0\n        \n            @angular/core : ~13.0.0\n        \n            @angular/forms : ~13.0.0\n        \n            @angular/material : ^13.0.0\n        \n            @angular/platform-browser : ~13.0.0\n        \n            @angular/platform-browser-dynamic : ~13.0.0\n        \n            @angular/router : ~13.0.0\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNewsWebsite\nThis project was generated with Angular CLI version 13.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nAppModule -->\n\nCardComponent->AppModule\n\n\n\n\n\nCategoriesComponent\n\nCategoriesComponent\n\nAppModule -->\n\nCategoriesComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nAppModule -->\n\nSpinnerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n            \n                \n                    All the tests that were found\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n            \n                \n                    Type of variable for finding tests\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n            \n                \n                    A production environment variable to enable production mode when in the production environment\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n            \n                \n                    A production environment variable to enable production mode when in the production environment\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
